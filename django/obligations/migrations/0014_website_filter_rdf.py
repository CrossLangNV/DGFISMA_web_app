# Generated by Django 3.0.9 on 2021-02-25 13:11
import os

from django.db import migrations
import requests
from obligations.models import ReportingObligation
from searchapp.models import Document, Website

EXTRACT_RO_NLP_VERSION = os.environ["EXTRACT_RO_NLP_VERSION"]
RDF_FUSEKI_QUERY_URL = os.environ["RDF_FUSEKI_QUERY_URL"]
RDF_FUSEKI_UPDATE_URL = os.environ["RDF_FUSEKI_UPDATE_URL"]
CAS_TO_RDF_API = os.environ["CAS_TO_RDF_API"]
SOURCE_TO_RDF_API = os.environ["SOURCE_TO_RDF_API"]


def add_website_filter_rdf(apps, schema_editor):


    print("got here?")

    """
    We need the doc_id, source name (EBA), source url (EBA.io), endpoint, updateendpoint.
    """

    q = ReportingObligation.objects.filter(version=EXTRACT_RO_NLP_VERSION)
    documents_with_ros = q.values("document_occurs__id")

    relevant_documents = Document.objects.filter(id__in=documents_with_ros)

    print(list(map(lambda web: (web.name, web.content, web.url) , Website.objects.all())))

    for document in relevant_documents:

        doc_id = str(document.id)
        website = document.website
        source_name = website.name
        source_url = website.url

        if 'lex' not in source_name.lower():
            continue

        print(doc_id, source_name, source_url)

        headers = {
            "docid": doc_id,
            "source-name": source_name,
            "source-url": source_url,
            "endpoint": RDF_FUSEKI_QUERY_URL,
            "updateendpoint": RDF_FUSEKI_UPDATE_URL,
        }

        print(headers)

        r = requests.post(
            SOURCE_TO_RDF_API,
            # json=json_content,
            headers=headers,
        )

        print(r.content)

        assert r.status_code < 300


class Migration(migrations.Migration):

    dependencies = [
        ("obligations", "0013_trigram_extension"),
    ]

    # operations = [migrations.RunPython(add_website_filter_rdf)]
